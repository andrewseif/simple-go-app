name: Build, Push, and Update

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build -t http-server:go-${{ github.sha }} .
        env:
          DOCKER_CLI: docker

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'http-server:go-${{ github.sha }}'
          format: 'table, template'
          template: '@/contrib/sarif.tpl'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          output: 'trivy-results-docker.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-docker.sarif'
          
  #     - name: Login to ECR
  #       id: ecr
  #       uses: jwalton/gh-ecr-login@v1
  #       with:
  #         access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         region: eu-north-1
  #     - name: Push to ECR
  #       run: |
  #         docker tag http-server:go-${{ github.sha }} 648264488158.dkr.ecr.eu-north-1.amazonaws.com/http-server:go-${{ github.sha }}
  #         docker push 648264488158.dkr.ecr.eu-north-1.amazonaws.com/http-server:go-${{ github.sha }}

  # update:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3


  #     - name: Clone Repository
  #       run: |
  #         git clone https://${{ secrets.HELM_ACCESS_KEY }}:${{ secrets.HELM_SECRET_KEY }}@github.com/andrewseif/http_server.git
  #         cd http_server
  #         git config --global user.email "go@pipeline"
  #         git config --global user.name "go"
  #         git checkout helm
  #         git pull

  #     - name: Update Helm Chart
  #       run: |
  #         yq eval -i '.image.tag = "go-${{ github.sha }}"' http-server/values.yaml
  #         echo "http-server image tag updated"

  #     - name: Commit and Push Changes
  #       run: |
  #         git add .
  #         git commit -m "Edit tag value for http-server image go-${{ github.sha }}"
  #         git push origin helm
